// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name UpshotPush
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1
import Foundation
import ImageIO
import Swift
import UIKit
@_exported import UpshotPush
import UserNotifications
import UserNotificationsUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @objcMembers public class UpshotNotificationContent : ObjectiveC.NSObject {
  @objc public func displayEnhancePush(controller: UIKit.UIViewController, notification: UserNotifications.UNNotification)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers open class UpshotNotificationService : UserNotifications.UNNotificationServiceExtension {
  @objc override dynamic open func didReceive(_ request: UserNotifications.UNNotificationRequest, withContentHandler contentHandler: @escaping (UserNotifications.UNNotificationContent) -> Swift.Void)
  @objc override dynamic open func serviceExtensionTimeWillExpire()
  @objc override dynamic public init()
  @objc deinit
}
extension UIKit.UIImageView {
  @objc @_Concurrency.MainActor @preconcurrency dynamic open func load(url: Foundation.URL, completion: @escaping (UIKit.UIImage?) -> Swift.Void)
  @objc @_Concurrency.MainActor @preconcurrency dynamic open func getImageData(url: Foundation.URL, completion: @escaping (Foundation.Data?) -> Swift.Void)
}
extension UIKit.UIImage {
  @objc dynamic open class func gifImageWithData(_ data: Foundation.Data) -> UIKit.UIImage?
  @objc dynamic open class func gifImageWithURL(_ gifUrl: Foundation.URL?) -> UIKit.UIImage?
  public class func gifImageWithName(_ name: Swift.String) -> UIKit.UIImage?
  @objc dynamic open class func imageFromGif(_ gifUrl: Foundation.URL?) -> UIKit.UIImage?
}
